// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Props Test If dropdown rendered correctly 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="dropdown-item"
      >
        <label
          class="dropdown-label"
        >
          dropdown-label
        </label>
        <select
          class="dropdown-field"
          data-testid="drop-down-test"
        >
          <option
            hidden=""
          >
            dropdown-value
          </option>
          <option
            value="option 1"
          >
            option 1
          </option>
          <option
            value="option 2"
          >
            option 2
          </option>
        </select>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="dropdown-item"
    >
      <label
        class="dropdown-label"
      >
        dropdown-label
      </label>
      <select
        class="dropdown-field"
        data-testid="drop-down-test"
      >
        <option
          hidden=""
        >
          dropdown-value
        </option>
        <option
          value="option 1"
        >
          option 1
        </option>
        <option
          value="option 2"
        >
          option 2
        </option>
      </select>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Dropdown Props Test If dropdown rendered correctly with error 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="dropdown-item"
      >
        <label
          class="dropdown-label"
        >
          dropdown-label
        </label>
        <select
          class="dropdown-field"
          data-testid="drop-down-test"
        >
          <option
            hidden=""
          >
            dropdown-value
          </option>
          <option
            value="option 1"
          >
            option 1
          </option>
          <option
            value="option 2"
          >
            option 2
          </option>
        </select>
        <label
          class="dropdown-error"
        >
          Enter 
          dropdown-label
        </label>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="dropdown-item"
    >
      <label
        class="dropdown-label"
      >
        dropdown-label
      </label>
      <select
        class="dropdown-field"
        data-testid="drop-down-test"
      >
        <option
          hidden=""
        >
          dropdown-value
        </option>
        <option
          value="option 1"
        >
          option 1
        </option>
        <option
          value="option 2"
        >
          option 2
        </option>
      </select>
      <label
        class="dropdown-error"
      >
        Enter 
        dropdown-label
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
